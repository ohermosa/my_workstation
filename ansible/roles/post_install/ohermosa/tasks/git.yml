---

- name: "Wait until private ssh key exists"
  wait_for:
    path: "/home/{{ ansible_user }}/.ssh/id_rsa"
    timeout: "{{ wait_dropbox_sync }}"

- name: "Create {{ git_dir }}"
  file:
    path: "{{ git_dir }}"
    state: directory

- name: "Clone git repositories"
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest}}"
    clone: yes
    key_file: "/home/{{ ansible_user }}/.ssh/id_rsa"
    accept_hostkey: true
  with_items:
    - "{{ git_repositories.work }}"
    - "{{ git_repositories.home }}"
  ignore_errors: true

- name: "Create new remote for repository"
  shell: "git remote add {{ item.remote.name }} {{ item.remote.url }}"
  args:
    chdir: "{{ item.dest }}"
  with_items:
    - "{{ git_repositories.work }}"
    - "{{ git_repositories.home }}"
  when: item.remote is defined
  register: remote_response
  failed_when: false
  tags:
    - create_remotes

- name: "Configure name and user of BBVA repositories"
  git_config:
    name: user.name
    repo: "{{ item }}"
    scope: local
    value: "{{ git_user_name }}"
  loop: "{{ git_repositories.work | json_query('[].dest') }}"

- name: "Configure name and user of BBVA repositories"
  git_config:
    name: user.email
    repo: "{{ item }}"
    scope: local
    value: "{{ git_user_mail_work }}"
  loop: "{{ git_repositories.work | json_query('[].dest') }}"

- name: "Configure name and user of personal repositories"
  git_config:
    name: user.name
    repo: "{{ item }}"
    scope: local
    value: "{{ git_user_name }}"
  loop: "{{ git_repositories.home | json_query('[].dest') }}"

- name: "Configure name and user of personal repositories"
  git_config:
    name: user.email
    repo: "{{ item }}"
    scope: local
    value: "{{ git_user_mail_personal}}"
  loop: "{{ git_repositories.home | json_query('[].dest') }}"
